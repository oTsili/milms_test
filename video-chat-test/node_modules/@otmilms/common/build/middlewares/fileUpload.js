"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractFile = void 0;
var multer_1 = __importDefault(require("multer"));
var invalid_mime_error_1 = require("../errors/invalid-mime-error");
var storage = function (mimeTypeMap, folder) {
    return multer_1.default.diskStorage({
        destination: function (req, file, cb) {
            // throw a specific error from the middlewares of common library i have published
            var isValid = mimeTypeMap[file.mimetype];
            var error = new invalid_mime_error_1.MimeValidationError();
            if (isValid) {
                error = null;
            }
            cb(error, folder);
        },
        filename: function (req, file, cb) {
            var name = file.originalname.toLowerCase().split(' ').join('-');
            var ext = mimeTypeMap[file.mimetype];
            cb(null, name + "-" + Date.now() + "." + ext);
        },
    });
};
var extractFile = function (MIME_TYPE_MAP, folder, formName) { return multer_1.default({ storage: storage(MIME_TYPE_MAP, folder) }).single(formName); };
exports.extractFile = extractFile;
